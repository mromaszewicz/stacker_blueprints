{
    "Mappings": {
        "MaxPodsPerNode": {
            "c4.2xlarge": {
                "MaxPods": 58
            },
            "c4.4xlarge": {
                "MaxPods": 234
            },
            "c4.8xlarge": {
                "MaxPods": 234
            },
            "c4.large": {
                "MaxPods": 29
            },
            "c4.xlarge": {
                "MaxPods": 58
            },
            "c5.18xlarge": {
                "MaxPods": 737
            },
            "c5.2xlarge": {
                "MaxPods": 58
            },
            "c5.4xlarge": {
                "MaxPods": 234
            },
            "c5.9xlarge": {
                "MaxPods": 234
            },
            "c5.large": {
                "MaxPods": 29
            },
            "c5.xlarge": {
                "MaxPods": 58
            },
            "i3.16xlarge": {
                "MaxPods": 737
            },
            "i3.2xlarge": {
                "MaxPods": 58
            },
            "i3.4xlarge": {
                "MaxPods": 234
            },
            "i3.8xlarge": {
                "MaxPods": 234
            },
            "i3.large": {
                "MaxPods": 29
            },
            "i3.xlarge": {
                "MaxPods": 58
            },
            "m3.2xlarge": {
                "MaxPods": 118
            },
            "m3.large": {
                "MaxPods": 29
            },
            "m3.medium": {
                "MaxPods": 12
            },
            "m3.xlarge": {
                "MaxPods": 58
            },
            "m4.10xlarge": {
                "MaxPods": 234
            },
            "m4.2xlarge": {
                "MaxPods": 58
            },
            "m4.4xlarge": {
                "MaxPods": 234
            },
            "m4.large": {
                "MaxPods": 20
            },
            "m4.xlarge": {
                "MaxPods": 58
            },
            "m5.12xlarge": {
                "MaxPods": 234
            },
            "m5.24xlarge": {
                "MaxPods": 737
            },
            "m5.2xlarge": {
                "MaxPods": 58
            },
            "m5.4xlarge": {
                "MaxPods": 234
            },
            "m5.large": {
                "MaxPods": 29
            },
            "m5.xlarge": {
                "MaxPods": 58
            },
            "p2.16xlarge": {
                "MaxPods": 234
            },
            "p2.8xlarge": {
                "MaxPods": 234
            },
            "p2.xlarge": {
                "MaxPods": 58
            },
            "p3.16xlarge": {
                "MaxPods": 234
            },
            "p3.2xlarge": {
                "MaxPods": 58
            },
            "p3.8xlarge": {
                "MaxPods": 234
            },
            "r3.2xlarge": {
                "MaxPods": 58
            },
            "r3.4xlarge": {
                "MaxPods": 234
            },
            "r3.8xlarge": {
                "MaxPods": 234
            },
            "r3.xlarge": {
                "MaxPods": 58
            },
            "r4.16xlarge": {
                "MaxPods": 737
            },
            "r4.2xlarge": {
                "MaxPods": 58
            },
            "r4.4xlarge": {
                "MaxPods": 234
            },
            "r4.8xlarge": {
                "MaxPods": 234
            },
            "r4.large": {
                "MaxPods": 29
            },
            "r4.xlarge": {
                "MaxPods": 58
            },
            "t2.2xlarge": {
                "MaxPods": 44
            },
            "t2.large": {
                "MaxPods": 35
            },
            "t2.medium": {
                "MaxPods": 17
            },
            "t2.small": {
                "MaxPods": 8
            },
            "t2.xlarge": {
                "MaxPods": 44
            },
            "x1.16xlarge": {
                "MaxPods": 234
            },
            "x1.32xlarge": {
                "MaxPods": 234
            }
        }
    },
    "Outputs": {
        "NodeInstanceRole": {
            "Value": {
                "Ref": "NodeInstanceRole"
            }
        }
    },
    "Resources": {
        "NodeGroup": {
            "Properties": {
                "DesiredCapacity": 1,
                "LaunchConfigurationName": {
                    "Ref": "NodeLaunchConfig"
                },
                "MaxSize": 3,
                "MinSize": 1,
                "Tags": [
                    {
                        "Key": "Name",
                        "PropagateAtLaunch": true,
                        "Value": "test-k8s-eks-worker"
                    },
                    {
                        "Key": "kubernetes.io/cluster/test-k8s",
                        "PropagateAtLaunch": true,
                        "Value": "owned"
                    }
                ],
                "VPCZoneIdentifier": [
                    "net-123456",
                    "net-123457"
                ]
            },
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "UpdatePolicy": {
                "AutoScalingReplacingUpdate": {
                    "WillReplace": "true"
                },
                "AutoScalingRollingUpdate": {
                    "MaxBatchSize": "1",
                    "MinInstancesInService": "1",
                    "PauseTime": "PT5M",
                    "WaitOnResourceSignals": "true"
                }
            }
        },
        "NodeInstanceProfile": {
            "Properties": {
                "Roles": [
                    {
                        "Ref": "NodeInstanceRole"
                    }
                ]
            },
            "Type": "AWS::IAM::InstanceProfile"
        },
        "NodeInstanceRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            }
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
                    "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
                    "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
                ],
                "Path": "/"
            },
            "Type": "AWS::IAM::Role"
        },
        "NodeLaunchConfig": {
            "Properties": {
                "AssociatePublicIpAddress": "false",
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "DeleteOnTermination": "true",
                            "VolumeSize": 20
                        }
                    }
                ],
                "IamInstanceProfile": {
                    "Ref": "NodeInstanceProfile"
                },
                "ImageId": "ami-73a6e20b",
                "InstanceType": "t2.small",
                "KeyName": "id_rsa_aws",
                "SecurityGroups": [
                    "sg-def5678"
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            {
                                "Fn::Base64": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "#!/bin/bash -xe\n",
                                            "CA_CERTIFICATE_DIRECTORY=/etc/kubernetes/pki",
                                            "\n",
                                            "CA_CERTIFICATE_FILE_PATH=$CA_CERTIFICATE_DIRECTORY/ca.crt",
                                            "\n",
                                            "MODEL_DIRECTORY_PATH=~/.aws/eks",
                                            "\n",
                                            "MODEL_FILE_PATH=$MODEL_DIRECTORY_PATH/eks-2017-11-01.normal.json",
                                            "\n",
                                            "mkdir -p $CA_CERTIFICATE_DIRECTORY",
                                            "\n",
                                            "mkdir -p $MODEL_DIRECTORY_PATH",
                                            "\n",
                                            "curl -o $MODEL_FILE_PATH https://s3-us-west-2.amazonaws.com/amazon-eks/1.10.3/2018-06-05/eks-2017-11-01.normal.json",
                                            "\n",
                                            "aws configure add-model --service-model file://$MODEL_FILE_PATH --service-name eks",
                                            "\n",
                                            "aws eks describe-cluster --region=",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            " --name=",
                                            "test-k8s",
                                            " --query 'cluster.{certificateAuthorityData: certificateAuthority.data, endpoint: endpoint}' > /tmp/describe_cluster_result.json",
                                            "\n",
                                            "cat /tmp/describe_cluster_result.json | grep certificateAuthorityData | awk '{print $2}' | sed 's/[,\"]//g' | base64 -d >  $CA_CERTIFICATE_FILE_PATH",
                                            "\n",
                                            "MASTER_ENDPOINT=$(cat /tmp/describe_cluster_result.json | grep endpoint | awk '{print $2}' | sed 's/[,\"]//g')",
                                            "\n",
                                            "INTERNAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)",
                                            "\n",
                                            "sed -i s,MASTER_ENDPOINT,$MASTER_ENDPOINT,g /var/lib/kubelet/kubeconfig",
                                            "\n",
                                            "sed -i s,CLUSTER_NAME,",
                                            "test-k8s",
                                            ",g /var/lib/kubelet/kubeconfig",
                                            "\n",
                                            "sed -i s,REGION,",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ",g /etc/systemd/system/kubelet.service",
                                            "\n",
                                            "sed -i s,MAX_PODS,",
                                            {
                                                "Fn::FindInMap": [
                                                    "MaxPodsPerNode",
                                                    "t2.small",
                                                    "MaxPods"
                                                ]
                                            },
                                            ",g /etc/systemd/system/kubelet.service",
                                            "\n",
                                            "sed -i s,MASTER_ENDPOINT,$MASTER_ENDPOINT,g /etc/systemd/system/kubelet.service",
                                            "\n",
                                            "sed -i s,INTERNAL_IP,$INTERNAL_IP,g /etc/systemd/system/kubelet.service",
                                            "\n",
                                            "DNS_CLUSTER_IP=10.100.0.10",
                                            "\n",
                                            "if [[ $INTERNAL_IP == 10.* ]] ; then DNS_CLUSTER_IP=172.20.0.10; fi",
                                            "\n",
                                            "sed -i s,DNS_CLUSTER_IP,$DNS_CLUSTER_IP,g  /etc/systemd/system/kubelet.service",
                                            "\n",
                                            "sed -i s,CERTIFICATE_AUTHORITY_FILE,$CA_CERTIFICATE_FILE_PATH,g /var/lib/kubelet/kubeconfig",
                                            "\n",
                                            "sed -i s,CLIENT_CA_FILE,$CA_CERTIFICATE_FILE_PATH,g  /etc/systemd/system/kubelet.service",
                                            "\n",
                                            "systemctl daemon-reload",
                                            "\n",
                                            "systemctl restart kubelet",
                                            "\n",
                                            "/opt/aws/bin/cfn-signal -e $? ",
                                            "         --stack ",
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            "         --resource NodeGroup ",
                                            "         --region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            }
                        ]
                    }
                }
            },
            "Type": "AWS::AutoScaling::LaunchConfiguration"
        }
    }
}
